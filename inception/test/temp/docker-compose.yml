version: "3"
services:
  rm-proxy-svc:
    image: "${REGISTRY}rapidminer-proxy:${PROXY_VERSION}" 
    hostname: rm-proxy-svc
    restart: always
    environment:
      - KEYCLOAK_BACKEND=${KEYCLOAK_BACKEND}
      - RMSERVER_BACKEND=${RAPIDMINER_SERVER_URL}
      - JUPYTER_BACKEND=${JUPYTER_BACKEND}
      - JUPYTER_URL_SUFFIX=${JUPYTER_URL_SUFFIX}
      - GRAFANA_BACKEND=${GRAFANA_BACKEND}
      - GRAFANA_URL_SUFFIX=${GRAFANA_URL_SUFFIX}
      - PA_BACKEND=${PA_BACKEND}
      - PA_URL_SUFFIX=${PA_URL_SUFFIX}
      - TOKEN_BACKEND=${TOKEN_BACKEND}
      - TOKEN_URL_SUFFIX=${TOKEN_URL_SUFFIX}
      - ALLOW_LE=${ALLOW_LE}
      - LE_BACKEND=${LE_BACKEND}
      - RTS_WEBUI_BACKEND=${RTS_WEBUI_BACKEND}
      - RTS_WEBUI_URL_SUFFIX=${RTS_WEBUI_URL_SUFFIX}
      - RTS_SCORING_BACKEND=${RTS_SCORING_BACKEND}
      - RTS_SCORING_URL_SUFFIX=${RTS_SCORING_URL_SUFFIX}
      - SSO_PUBLIC_URL=${SSO_PUBLIC_URL}
      - SSO_IDP_REALM=${SSO_IDP_REALM}
      - RTS_BASIC_AUTH=true
      - LANDING_BACKEND=${LANDING_BACKEND}
      - PASSWORD_FILE_PATH=${PASSWORD_FILE_PATH}
      - HTTPS_CRT_PATH=${HTTPS_CRT_PATH}
      - HTTPS_KEY_PATH=${HTTPS_KEY_PATH}
      - HTTPS_DH_PATH=${HTTPS_DH_PATH}
      #- DEBUG_CONF_INIT=true
      #- WAIT_FOR_DHPARAM=true
      - PROXY_DATA_UPLOAD_LIMIT=${PROXY_DATA_UPLOAD_LIMIT}
    ports:
      - 80:80
      - 443:443
    networks:
      rm-go-proxy-net:
        aliases:
         - rm-proxy-svc
         - ${PUBLIC_DOMAIN}
      rm-platform-int-net:
        aliases:
         - rm-proxy-svc
         - ${PUBLIC_DOMAIN}
      jupyterhub-user-net: 
        aliases: 
         - ${PUBLIC_DOMAIN}
    volumes:
      - ./ssl:/etc/nginx/ssl
      - platform-admin-uploaded-vol:/rapidminer/platform-admin/uploaded/

  letsencrypt-svc:
    image: "${REGISTRY}rm-letsencrypt-client:${LE_VERSION}"
    hostname: rm-letsencrypt-client-svc
    restart: always
    environment:
    - PUBLIC_URL=${PUBLIC_URL}
    - LETSENCRYPT_HOME=/certificates/
    - DOMAIN=${PUBLIC_URL}
    - WEBMASTER_MAIL=devops@rapidminer.com
    - TZ=Europe/Budapest
#    ports:
#    - 84:84
    networks:
      rm-platform-int-net:
        aliases:
        - rm-letsencrypt-client-svc
    volumes:
    - ./ssl:/etc/letsencrypt/


  rm-keycloak-db-svc:
    image: postgres:9.6
    restart: always
    hostname: rm-keycloak-db-svc
    environment:
      - POSTGRES_DB=${KC_DB}
      - POSTGRES_USER=${KC_USER}
      - POSTGRES_PASSWORD=${KC_PASSWORD}
    volumes:
      - keycloak-postgresql-vol:/var/lib/postgresql/data
    networks:
      rm-idp-db-net:
        aliases:
         - rm-keycloak-db-svc

  rm-keycloak-svc:
    image: ${REGISTRY}rapidminer-keycloak:${KEYCLOAK_VERSION}
    restart: always
    hostname: rm-keycloak-svc
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=rm-keycloak-db-svc
      - DB_DATABASE=${KC_DB}
      - DB_USER=${KC_USER}
      - DB_SCHEMA=public
      - DB_PASSWORD=${KC_PASSWORD}
      - KEYCLOAK_USER=${KEYCLOAK_USER}
      - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD}
      - PROXY_ADDRESS_FORWARDING=true
      #- KEYCLOAK_LOGLEVEL=DEBUG
      #- ROOT_LOGLEVEL=DEBUG
      #- JDBC_PARAMS=ssl=true
    depends_on:
      - rm-keycloak-db-svc
      - rm-proxy-svc
    networks:
      rm-platform-int-net:
        aliases:
          - rm-keycloak-svc
      rm-idp-db-net:
        aliases:
          - rm-keycloak-svc

  rm-init-svc:
    image: "${REGISTRY}rapidminer-deployment-init:${INIT_VERSION}"
    restart: "no"
    hostname: rm-keycloak-init-svc
    depends_on:
      - rm-keycloak-svc
      - rm-postgresql-svc
    environment:
      - LEGACY_REST_BASIC_AUTH_ENABLED=${LEGACY_REST_BASIC_AUTH_ENABLED}
      - PUBLIC_URL=${PUBLIC_URL}
      - SSO_PUBLIC_URL=${SSO_PUBLIC_URL}
    volumes: 
      - ./.env:/.env
      - ./docker-compose.yml:/docker-compose.yml:ro
      - keycloak-admin-cli-vol:/root/.keycloak/
      - deployed-services-vol:/rapidminer/deployed-services/
      - ./go/saml:/go/saml/
      - ./go/licenses:/go/licenses/
    networks:
      rm-platform-int-net:
        aliases:
          - rm-init-svc
      rm-server-db-net:
        aliases:
          - rm-init-svc

  rm-postgresql-svc:
    image: "postgres:9.6"
    hostname: rm-postgresql-svc
    restart: always
    environment:
     - POSTGRES_DB=${SERVER_DBSCHEMA}
     - POSTGRES_USER=${SERVER_DBUSER}
     - POSTGRES_PASSWORD=${SERVER_DBPASS}
    volumes:
     - rm-postgresql-vol:/var/lib/postgresql/data
    networks:
      rm-server-db-net:
        aliases:
         - rm-postgresql-svc

  rm-server-svc:
    image: "${REGISTRY}rapidminer-server:${SERVER_VERSION}"
    hostname: rm-server-svc
    restart: always
    environment:
      - PA_BASE_URL=${PA_BACKEND}
      - PA_SYNC_DEBUG=False
#      This may be useful, if server and platform-admin are not on an internal network
#      - PA_SYNC_AUTH_USER=admin
#      - PA_SYNC_AUTH_PASS=changeit
      - DBHOST=${SERVER_DBHOST}
      - DBSCHEMA=${SERVER_DBSCHEMA}
      - DBUSER=${SERVER_DBUSER}
      - DBPASS=${SERVER_DBPASS}
      - SSO_PUBLIC_URL=${SSO_PUBLIC_URL}
      - SSO_IDP_REALM=${SSO_IDP_REALM}
      - SSO_CLIENT_ID=${RMSERVER_SSO_CLIENT_ID}
      - SSO_CLIENT_SECRET=${RMSERVER_SSO_CLIENT_SECRET}
      - SSO_SSL_REQUIRED=${SSO_SSL_REQUIRED}
      - LEGACY_REST_BASIC_AUTH_ENABLED=${LEGACY_REST_BASIC_AUTH_ENABLED}
      - SERVER_MAX_MEMORY=${SERVER_MAX_MEMORY}
      - BROKER_ACTIVEMQ_USERNAME=${BROKER_ACTIVEMQ_USERNAME}
      - BROKER_ACTIVEMQ_PASSWORD=${BROKER_ACTIVEMQ_PASSWORD}
      - JOBSERVICE_AUTH_SECRET=${AUTH_SECRET}
      - JUPYTER_URL_SUFFIX=${JUPYTER_URL_SUFFIX}
      - GRAFANA_URL_SUFFIX=${GRAFANA_URL_SUFFIX}
#      - PROXY_HTTP_PORT=80
#      - PROXY_HTTPS_PORT=443
      - TZ=${TZ}
      - CES_VERSION=${CES_VERSION}
    volumes:
      - rm-server-bootstrap-vol:/bootstrap.d
      - rm-server-home-vol:/persistent-rapidminer-home
      - rm-coding-shared-vol:/opt/coding-shared/:ro
    depends_on:
      - rm-postgresql-svc
    networks:
      jupyterhub-user-net:
        aliases:
         - rm-server-svc
      rm-platform-int-net:
        aliases:
         - rm-server-svc
      rm-server-db-net:
        aliases:
         - rm-server-svc

  rm-server-job-agent-svc:
    image: "${REGISTRY}rapidminer-execution-jobagent:${SERVER_VERSION}"
    hostname: rm-server-job-agent-svc
    restart: always
    environment:
      - RAPIDMINER_SERVER_HOST=${RAPIDMINER_SERVER_HOST}
      - RAPIDMINER_SERVER_PROTOCOL=${RAPIDMINER_SERVER_PROTOCOL}
      - RAPIDMINER_SERVER_PORT=${RAPIDMINER_SERVER_PORT}
      - JOBAGENT_QUEUE_ACTIVEMQ_URI=${JOBAGENT_QUEUE_ACTIVEMQ_URI}
      - JOBAGENT_QUEUE_ACTIVEMQ_USERNAME=${BROKER_ACTIVEMQ_USERNAME}
      - JOBAGENT_QUEUE_ACTIVEMQ_PASSWORD=${BROKER_ACTIVEMQ_PASSWORD}
      - JOBAGENT_AUTH_SECRET=${AUTH_SECRET}
      - JOBAGENT_CONTAINER_COUNT=${JOBAGENT_CONTAINER_COUNT}
      - JOB_QUEUE=${JOB_QUEUE}
      - JOBAGENT_CONTAINER_MEMORYLIMIT=${JOBAGENT_CONTAINER_MEMORYLIMIT}
      - RAPIDMINER_JOBAGENT_OPTS=${RAPIDMINER_JOBAGENT_OPTS}
      - TZ=${TZ}
      - INIT_SHARED_CONDA_SETTINGS=${INIT_SHARED_CONDA_SETTINGS}
      - CES_VERSION=${CES_VERSION}
    volumes:
      - rm-server-bootstrap-ja-vol:/bootstrap.d
      - rm-coding-shared-vol:/opt/coding-shared/:ro
      - rm-server-ja-log-vol:/rapidminer-jobagent/home/log
      - rm-server-ja-data-vol:/rapidminer-jobagent/home/data
    depends_on:
      - rm-server-svc
    networks:
      rm-platform-int-net:
        aliases:
         - rm-server-job-agent-svc

  rm-radoop-proxy-svc:
    image: "${REGISTRY}radoop-proxy:${RADOOP_PROXY_VERSION}"
    hostname: rm-radoop-proxy-svc
    restart: always
    environment:
      - AUTHENTICATION=${RADOOP_PROXY_AUTHENTICATION}
      - SUPERUSERNAME=${RADOOP_PROXY_SUPERUSERNAME}
      - SUPERUSERPASSWORD=${RADOOP_PROXY_SUPERUSERPASSWORD}
      - PORT=${RADOOP_PROXY_PORT}
      - WORKERSPOOLSIZE=${RADOOP_PROXY_WORKERSPOOLSIZE}
      - SSL=${RADOOP_PROXY_SSL}
      - SERVERHOST=${RAPIDMINER_SERVER_HOST}
      - SERVERPORT=${RAPIDMINER_SERVER_PORT}
      #- SCHEME
    ports:
      # has to be the same number for internal and external ports.
      - ${RADOOP_PROXY_PORT}:${RADOOP_PROXY_PORT}
    #depends_on:
      #- rm-server-svc

  platform-admin-webui-svc:
    image: "${REGISTRY}rapidminer-platform-admin-webui:${PA_VERSION}"
    hostname: platform-admin-webui-svc
    restart: always
    environment:
      - PA_URL_SUFFIX=${PA_URL_SUFFIX}
      - RTS_SCORING_URL_SUFFIX=${RTS_SCORING_URL_SUFFIX}
      - RTS_SCORING_BACKEND=${RTS_SCORING_BACKEND}
      - SSO_PUBLIC_URL=${SSO_PUBLIC_URL}
      - SSO_IDP_REALM=${SSO_IDP_REALM}
      - SSO_CLIENT_ID=${PA_SSO_CLIENT_ID}
      - SSO_CLIENT_SECRET=${PA_SSO_CLIENT_SECRET}
      - PA_DISABLE_PYTHON=${PA_DISABLE_PYTHON}
      - PA_DISABLE_RTS=${PA_DISABLE_RTS}
      - DEBUG=false
      - CES_VERSION=${CES_VERSION}
    volumes:
      - platform-admin-uploaded-vol:/var/www/html/uploaded/
      - rts-licenses-vol:/var/www/html/uploaded/licenses/
    networks:
      jupyterhub-user-net:
        aliases:
         - platform-admin-webui-svc
      rm-platform-int-net:
        aliases:
         - platform-admin-webui-svc
      rm-coding-environment-storage-net:
        aliases:
         - platform-admin-webui-svc

  rts-agent-svc:
    image: "${REGISTRY}rapidminer-execution-scoring:${RTS_VERSION}"
    hostname: rts-agent-svc
    restart: always
    environment:
      - WAIT_FOR_LICENSES=${WAIT_FOR_LICENSES}
      - TZ=${TZ}
      - CES_VERSION=${CES_VERSION}
      - INIT_SHARED_CONDA_SETTINGS=true
    volumes:
      - rts-deployments-vol:/rapidminer-scoring-agent/home/deployments/
      - rts-licenses-vol:/rapidminer-scoring-agent/home/resources/licenses/rapidminer-scoring-agent/
      - rm-coding-shared-vol:/opt/coding-shared/:ro
    networks:
      rm-platform-int-net:
        aliases:
         - rts-agent-svc

  rm-jupyterhub-db-svc:
    image: ${REGISTRY}rapidminer-jupyterhub-postgres:${RM_JUPYTER_VERSION}
    hostname: rm-jupyterhub-db-svc
    restart: always
    environment:
      - POSTGRES_DB=${JHUB_POSTGRES_DB}
      - POSTGRES_USER=${JHUB_POSTGRES_USER}
      - POSTGRES_PASSWORD=${JHUB_POSTGRES_PASSWORD}
    volumes:
      - jupyterhub-postgresql-vol:/var/lib/postgresql/data
    networks:
      jupyterhub-user-net:
        aliases:
         - rm-jupyterhub-db-svc

  rm-jupyterhub-svc:
    image: "${REGISTRY}rapidminer-jupyterhub-jupyterhub:${RM_JUPYTER_VERSION}"
    hostname: rm-jupyterhub-svc
    restart: always
    environment:
      - RM_JUPYTER_VERSION=${RM_JUPYTER_VERSION}
      - JHUB_HOSTNAME=${JHUB_HOSTNAME}
      - SERVER_BASE_URL=${RAPIDMINER_SERVER_URL}
      - POSTGRES_HOST=${JHUB_POSTGRES_HOST}
      - POSTGRES_DB=${JHUB_POSTGRES_DB}
      - POSTGRES_USER=${JHUB_POSTGRES_USER}
      - POSTGRES_PASSWORD=${JHUB_POSTGRES_PASSWORD}
      - DOCKER_NOTEBOOK_IMAGE=${REGISTRY}rapidminer-jupyter_notebook:${RM_JUPYTER_VERSION}
      - JUPYTERHUB_CRYPT_KEY=${JUPYTERHUB_CRYPT_KEY}
      - DOCKER_NOTEBOOK_CPU_LIMIT=${DOCKER_NOTEBOOK_CPU_LIMIT}
      - DOCKER_NOTEBOOK_MEM_LIMIT=${DOCKER_NOTEBOOK_MEM_LIMIT}
      - JHUB_DEBUG=${JHUB_DEBUG}
      - JHUB_TOKEN_DEBUG=${JHUB_TOKEN_DEBUG}
      - JHUB_PROXY_DEBUG=${JHUB_PROXY_DEBUG}
      - JHUB_DB_DEBUG=${JHUB_DB_DEBUG}
      - JHUB_SPAWNER_DEBUG=${JHUB_SPAWNER_DEBUG}
      - JUPYTER_STACK_NAME=${JUPYTER_STACK_NAME}
      - SSO_NB_UID_KEY=${SSO_NB_UID_KEY}
      - SSO_NB_GID_KEY=${SSO_NB_GID_KEY}
      - SSO_NB_CUSTOM_BIND_MOUNTS_KEY=${SSO_NB_CUSTOM_BIND_MOUNTS_KEY}
      - JUPYTER_NB_CUSTOM_BIND_MOUNTS=${JUPYTER_NB_CUSTOM_BIND_MOUNTS}      
      - SSO_PUBLIC_URL=${SSO_PUBLIC_URL}
      - SSO_IDP_REALM=${SSO_IDP_REALM}
      - SSO_CLIENT_ID=${JHUB_SSO_CLIENT_ID}
      - SSO_CLIENT_SECRET=${JHUB_SSO_CLIENT_SECRET}
      - PUBLIC_URL=${PUBLIC_URL}
      - JUPYTER_URL_SUFFIX=${JUPYTER_URL_SUFFIX}
      - SSO_USERNAME_KEY=preferred_username
      - SSO_RESOURCE_ACCESS_KEY=resource_access
      - JHUB_DEFAULT_ENV_NAME=aihub-${RM_JUPYTER_VERSION}-python
      - JHUB_SPAWNER=${JHUB_SPAWNER}
      - JHUB_API_PROTOCOL=${JHUB_API_PROTOCOL}
      - JHUB_API_HOSTNAME=${JHUB_API_HOSTNAME}
      - JHUB_PROXY_PORT=${JHUB_PROXY_PORT}
      - JHUB_API_PORT=${JHUB_API_PORT}
      - JHUB_ENV_VOLUME_NAME=${JHUB_ENV_VOLUME_NAME}
#      - JHUB_CUSTOM_CA_CERTS=${JHUB_CUSTOM_CA_CERTS}
#      - JHUB_K8S_NAMESPACE=${JHUB_K8S_NAMESPACE}
#      - JHUB_K8S_NODE_SELECTOR_NAME=${JHUB_K8S_NODE_SELECTOR_NAME}
#      - JHUB_K8S_NODE_SELECTOR_VALUE=${JHUB_K8S_NODE_SELECTOR_VALUE}
#      - JHUB_K8S_NOTEBOOK_STORAGE_ACCESS_MODE=${JHUB_K8S_NOTEBOOK_STORAGE_ACCESS_MODE}
#      - JHUB_K8S_NOTEBOOK_STORAGE_CAPACITY=${JHUB_K8S_NOTEBOOK_STORAGE_CAPACITY}
#      - JHUB_K8S_NOTEBOOK_STORAGE_CLASS=${JHUB_K8S_NOTEBOOK_STORAGE_CLASS}
#      - JHUB_K8S_IMAGE_PULL_SECRET=${JHUB_K8S_IMAGE_PULL_SECRET}
#      - JHUB_K8S_ENV_PVC_NAME=${JHUB_K8S_ENV_PVC_NAME}
#      - JHUB_K8S_ENV_PVC_SUBPATH=${JHUB_K8S_ENV_PVC_SUBPATH}
      - JHUB_DOCKER_DISABLE_NOTEBOOK_IMAGE_PULL_AT_STARTUP=${JHUB_DOCKER_DISABLE_NOTEBOOK_IMAGE_PULL_AT_STARTUP}
      - JHUB_DISABLE_AIHUB_TOKEN_REQUESTS=${JHUB_DISABLE_AIHUB_TOKEN_REQUESTS}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
    depends_on:
      - rm-jupyterhub-db-svc
      - rm-server-svc
    networks:
      rm-platform-int-net:
        aliases:
         - rm-jupyterhub-svc
      jupyterhub-user-net:
        aliases:
         - rm-jupyterhub-svc

  rm-coding-environment-storage-svc:
    image: "${REGISTRY}rapidminer-coding-environment-storage:${CES_VERSION}"
    hostname: rm-coding-environment-storage-svc
    restart: always
    environment:
      - PA_BASE_URL=${PA_BACKEND}
      - PA_SYNC_DEBUG=False
    networks:
      rm-coding-environment-storage-net:
        aliases:
         - rm-coding-environment-storage-svc
    volumes:
      - rm-coding-shared-vol:/opt/coding-shared/

  rm-grafana-svc:
    image: ${REGISTRY}rapidminer-grafana:${RM_GRAFANA_VERSION}
    hostname: rm-grafana-svc
    restart: always
    environment:
      - PUBLIC_URL=${PUBLIC_URL}
      - GRAFANA_URL_SUFFIX=${GRAFANA_URL_SUFFIX}
      #- GF_LOG_LEVEL=debug
      - SSO_PUBLIC_URL=${SSO_PUBLIC_URL}
      - SSO_IDP_REALM=${SSO_IDP_REALM}
      - SSO_CLIENT_ID=${GRAFANA_SSO_CLIENT_ID}
      - SSO_CLIENT_SECRET=${GRAFANA_SSO_CLIENT_SECRET}
      - TZ=${TZ}
    volumes:
      - grafana-home:/var/lib/grafana
    depends_on:
      - rm-grafana-proxy-svc
    networks:
      rm-platform-int-net:
        aliases:
         - rm-grafana-svc

  rm-grafana-proxy-svc:
    image: ${REGISTRY}rapidminer-grafana-proxy:${RM_GRAFANA_VERSION}
    hostname: rm-grafana-proxy-svc
    restart: always
    environment:
      - RAPIDMINER_URL=${RAPIDMINER_SERVER_URL}
    depends_on:
      - rm-server-svc
    networks:
      rm-platform-int-net:
        aliases:
         - rm-grafana-proxy-svc

  rm-tabgo-proxy-svc:
    image: ${REGISTRY}rapidminer-tabgo-proxy:${TABGO_VERSION}
    hostname: rm-tabgo-proxy-svc
    restart: always
    environment:
      - HTTPS_CRT_PATH=${HTTPS_CRT_PATH}
      - HTTPS_KEY_PATH=${HTTPS_KEY_PATH}
      - TABGO_BACKEND=${TABGO_BACKEND}
      - TABGO_PORT=${TABGO_PORT}
    ports:
      - ${TABGO_PROXY_PORT}:443
    depends_on:
      - rm-proxy-svc
    volumes:
      - ./ssl:/etc/nginx/ssl
    networks:
      rm-platform-int-net:
        aliases:
         - rm-tabgo-proxy-svc
    
  rm-tabgo-svc:
    image: ${REGISTRY}rapidminer-tabgo:${TABGO_VERSION}
    restart: always
    hostname: rm-tabgo-svc
    environment:
      - TABGO_MAX_MEMORY=${TABGO_MAX_MEMORY}
      - TABGO_RMS_HOSTNAME=${RAPIDMINER_SERVER_URL}
      - TABGO_GO_HOSTNAME=${PUBLIC_URL}
      - TABGO_SMALL_REQUEST_LIMIT=${TABGO_SMALL_REQUEST_LIMIT}
      - TABGO_SMALL_REQUEST_INTERVAL=${TABGO_SMALL_REQUEST_INTERVAL}
      - TABGO_LOG_LEVEL=${TABGO_LOG_LEVEL}
      - _JAVA_OPTIONS=${TABGO_JAVA_OPTIONS}
    networks:
      rm-platform-int-net:
        aliases:
         - rm-tabgo-svc

  landing-page:
    image: ${REGISTRY}rapidminer-deployment-landing-page:${RM_LANDING_VERSION}
    restart: always
    hostname: landing-page
    environment:
      - SSO_PUBLIC_URL=${SSO_PUBLIC_URL}
      - SSO_IDP_REALM=${SSO_IDP_REALM}
      - SSO_CLIENT_ID=${LANDING_SSO_CLIENT_ID}
      - SSO_CLIENT_SECRET=${LANDING_SSO_CLIENT_SECRET}
      - DEBUG=false
    volumes:
      - rm-landing-page-vol:/var/www/html/uploaded/
      - deployed-services-vol:/rapidminer/deployed-services/
    networks:
      rm-platform-int-net:
        aliases:
         - landing-page

  rm-token-tool-svc:
    image: ${REGISTRY}rapidminer-deployment-landing-page:${RM_LANDING_VERSION}
    restart: always
    hostname: rm-token-tool
    environment:      
    - PUBLIC_URL=${PUBLIC_URL}
    - SSO_PUBLIC_URL=${SSO_PUBLIC_URL}               
    - SSO_IDP_REALM=${SSO_IDP_REALM}
    - SSO_CLIENT_ID=${TOKEN_SSO_CLIENT_ID}
    - SSO_CLIENT_SECRET=${TOKEN_SSO_CLIENT_SECRET}
    - DEBUG=false
    - SSO_CUSTOM_SCOPE=openid info offline_access
    - CUSTOM_URL_SUFFIX=${TOKEN_URL_SUFFIX}
    - CUSTOM_CONTENT=get-token
    volumes:
      - rm-token-tool-vol:/var/www/html/uploaded/
    networks:
      rm-platform-int-net:
        aliases:
        - rm-token-tool


  # ###############################################
  #
  # RapidMiner GO
  #
  # ###############################################

  # Frontend and API router
  rapidminer-automodel-routing:
    image: rapidminer/rapidminer-automodel-routing:${GO_IMAGE_TAG_ROUTING}
    hostname: rapidminer-automodel-routing
    #ports:
    #  - "30000:80"
    environment:
      RMID_HOST_PORT_1: ${GO_ROUTING_RMID_HOST_PORT_1}
      AM_HOST_PORT_1: ${GO_ROUTING_AM_HOST_PORT_1}
      EVENT_HOST_PORT: ${GO_ROUTING_EVENT_HOST_PORT}
      RESOLVER: ${GO_ROUTING_RESOLVER}
      SERVER_NAME: ${GO_ROUTING_SERVER_NAME}
      PROTOCOL: ${GO_ROUTING_PROTOCOL}
    depends_on:
      - rapidminer-automodeler
      - rapidminer-automodel-rmid
    restart: always
    networks:
      rm-go-proxy-net:
        aliases:
         - rapidminer-automodel-routing
      rm-go-int-net:
        aliases:
         - rapidminer-automodel-routing
  rapidminer-automodel-rmid:
    image: rapidminer/rapidminer-automodel-rmid:${GO_IMAGE_TAG_RMID}
    hostname: rapidminer-automodel-rmid
    environment:
      SPRING_PROFILES_ACTIVE: ${GO_RMID_SPRING_PROFILES_ACTIVE}
      DB_HOST: ${GO_DB_HOST}
      DB_USER: ${GO_RMID_DB_USER}
      DB_PASSWORD: ${GO_RMID_DB_PASSWORD}
      DB_NAME: ${GO_RMID_DB_NAME}
      _JAVA_OPTIONS: ${GO_RMID_JAVA_OPTIONS}
      BASE_URL: ${PUBLIC_URL}
      AUTH_SECRET: ${GO_AUTH_SECRET}
      RMID_FRONTEND_TRACKING_ENABLED: ${GO_RMID_FRONTEND_TRACKING_ENABLED}
      TOKEN_MAX_AGE: ${GO_RMID_TOKEN_MAX_AGE}
      LOGIN_TYPE: ${GO_RMID_LOGIN_TYPE}
      SAML_ENTITY_ID: ${GO_SSO_CLIENT_ID}
      SAML_KEYSTORE_PASSWORD: ${GO_RMID_SAML_KEYSTORE_PASSWORD}
      SAML_KEYSTORE_ALIAS: ${GO_RMID_SAML_KEYSTORE_ALIAS}
      RMID_FRONTEND_AUTO_LOGIN: "true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/rmid/system/health"]
    restart: always
    volumes:
      - ./go/saml:/rapidminer-automodel-rmid/saml
      - ./go/branding/rmid:/rapidminer-automodeler/branding
    depends_on: 
      - rapidminer-automodel-db
    networks:
      rm-go-int-net:
        aliases:
         - rapidminer-automodel-rmid 
  rapidminer-automodeler:
    image: rapidminer/rapidminer-automodeler:${GO_IMAGE_TAG_AM}
    hostname: rapidminer-automodeler
    environment:
      SPRING_PROFILES_ACTIVE: ${GO_AUTOMODELER_SPRING_PROFILES_ACTIVE}
      SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE: ${GO_AUTOMODELER_SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE}
      _JAVA_OPTIONS: ${GO_AUTOMODELER_JAVA_OPTIONS}
      DB_HOST: ${GO_DB_HOST}
      DB_USER: ${GO_AUTOMODELER_DB_USER}
      DB_PASSWORD: ${GO_AUTOMODELER_DB_PASSWORD}
      DB_NAME: ${GO_AUTOMODELER_DB_NAME}
      BASE_URL: ${PUBLIC_URL}
      RMID_BASE_URL: ${GO_AUTOMODELER_RMID_BASE_URL}
      AMQ_URL: ${GO_AMQ_URL}
      AMQ_USERNAME: ${GO_ACTIVEMQ_ADMIN_LOGIN}
      AMQ_PASSWORD: ${GO_ACTIVEMQ_ADMIN_PASSWORD}
      AUTH_SECRET: ${GO_AUTH_SECRET}
      AUTOMODELER_FRONTEND_TRACKING_ENABLED: ${GO_AUTOMODELER_FRONTEND_TRACKING_ENABLED}
      AUTOMODELER_FILESTORE_MIN_ROW_LIMIT: ${GO_AUTOMODELER_FILESTORE_MIN_ROW_LIMIT}
      AUTOMODELER_EXECUTION_TASK_LIMIT_PER_USER: ${GO_AUTOMODELER_EXECUTION_TASK_LIMIT_PER_USER}
      AUTOMODELER_EXECUTION_QUEUE_LIMIT_PER_USER: ${GO_JOB_CONTAINERS}
      AUTOMODELER_EXECUTION_MAXIMUM_TOTAL_RESULT_SIZE: ${GO_AUTOMODELER_EXECUTION_MAXIMUM_TOTAL_RESULT_SIZE}
      AUTOMODELER_DATA_IMPORT_MINIMUM_ATTRIBUTE_COUNT: ${GO_AUTOMODELER_DATA_IMPORT_MINIMUM_ATTRIBUTE_COUNT}
      AUTOMODELER_DATA_IMPORT_MAXIMUM_ATTRIBUTE_COUNT: ${GO_AUTOMODELER_DATA_IMPORT_MAXIMUM_ATTRIBUTE_COUNT}
      JOB_QUEUE: ${GO_JOB_QUEUE}
      JOB_STATUS_QUEUE: ${GO_JOB_STATUS_QUEUE}
      JOB_COMMAND_TOPIC: ${GO_JOB_COMMAND_TOPIC}
    volumes:
      - rapidminer_automodel_shared:/rapidminer-automodeler/shared
      - ./go/licenses:/rapidminer-automodeler/shared/licenses
      - ./go/branding/am:/rapidminer-automodeler/branding
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/am/system/health"]
    restart: always
    depends_on: 
      - rapidminer-automodel-activemq
      - rapidminer-automodel-db
    networks:
      rm-go-int-net:
        aliases:
         - rapidminer-automodeler
  rapidminer-automodel-job-container:
    image: rapidminer/rapidminer-automodel-job-container:${GO_IMAGE_TAG_JC}
    hostname: rapidminer-automodel-job-container
    environment:
      # Be aware that additional env vars might be set in Dockerfile
      #      (e.g. JOBCONTAINER_BASEDIR: /rapidminer-automodel-job-container)
      SPRING_PROFILES_ACTIVE: ${GO_JC_SPRING_PROFILES_ACTIVE}
      _JAVA_OPTIONS: ${GO_JC_JAVA_OPTIONS}
      JOB_QUEUE: ${GO_JOB_QUEUE}
      JOB_STATUS_QUEUE: ${GO_JOB_STATUS_QUEUE}
      JOB_COMMAND_TOPIC: ${GO_JOB_COMMAND_TOPIC}
      AMQ_URL: ${GO_AMQ_URL}
      AMQ_REST_URL: ${GO_AMQ_REST_URL}
      AMQ_USERNAME: ${GO_ACTIVEMQ_ADMIN_LOGIN}
      AMQ_PASSWORD: ${GO_ACTIVEMQ_ADMIN_PASSWORD}
    volumes:
      - rapidminer_automodel_shared:/rapidminer-automodel-job-container/shared
      - ./go/licenses:/rapidminer-automodel-job-container/shared/licenses
    depends_on:
      - rapidminer-automodeler
    restart: always
    networks:
      rm-go-int-net:
        aliases:
         - rapidminer-automodel-job-container
  rapidminer-ui-event-tracking:
    image: rapidminer/rapidminer-ui-event-tracking:${GO_IMAGE_TAG_ET}
    hostname: rapidminer-ui-event-tracking
    environment:
      _JAVA_OPTIONS: ${GO_ET_JAVA_OPTIONS}
      DB_HOST: ${GO_DB_HOST}
      DB_USER: ${GO_AUTOMODELER_DB_USER}
      DB_PASSWORD: ${GO_AUTOMODELER_DB_PASSWORD}
      DB_NAME: ${GO_AUTOMODELER_DB_NAME}
    depends_on:
      - rapidminer-automodeler
    restart: always
    networks:
      rm-go-int-net:
        aliases:
         - rapidminer-ui-event-tracking
  rapidminer-automodel-db:
    image: postgres:9.6.6
    hostname: rapidminer-automodel-db
    volumes:
      - rapidminer_automodel_dbdata:/var/lib/postgresql/data
      - ./go/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      rm-go-int-net:
        aliases:
         - rapidminer-automodel-db
    environment:
      AUTOMODELER_DB_USER: ${GO_AUTOMODELER_DB_USER}
      AUTOMODELER_DB_PASSWORD: ${GO_AUTOMODELER_DB_PASSWORD}
      AUTOMODELER_DB_NAME: ${GO_AUTOMODELER_DB_NAME}
      RMID_DB_USER: ${GO_RMID_DB_USER}
      RMID_DB_PASSWORD: ${GO_RMID_DB_PASSWORD}
      RMID_DB_NAME: ${GO_RMID_DB_NAME}
      POSTGRES_PASSWORD: ${GO_POSTGRES_PASSWORD}
      POSTGRES_USER: ${GO_POSTGRES_USER}
    #ports:
    #  - "5432:5432"
  rapidminer-automodel-activemq:
    image: webcenter/activemq:5.14.3
    hostname: rapidminer-automodel-activemq
    environment:
      ACTIVEMQ_CONFIG_DEFAULTACCOUNT: ${GO_ACTIVEMQ_CONFIG_DEFAULTACCOUNT}
      ACTIVEMQ_ADMIN_LOGIN: ${GO_ACTIVEMQ_ADMIN_LOGIN}
      ACTIVEMQ_ADMIN_PASSWORD: ${GO_ACTIVEMQ_ADMIN_PASSWORD}
      ACTIVEMQ_JMX_ADMIN_PASSWORD: ${GO_ACTIVEMQ_ADMIN_PASSWORD}
      ACTIVEMQ_JMX_ADMIN_ROLE: readwrite
      ACTIVEMQ_GROUPS_owners: 'admin'
      ACTIVEMQ_CONFIG_MAXMEMORY: ${GO_AMQ_MAXMEMORY}
    volumes:
      - ./go/activemq.xml:/opt/activemq/conf/activemq.xml
    networks:
      rm-go-int-net:
        aliases:
         - rapidminer-automodel-activemq
    #ports:
    #  - "8161:8161"
    #  - "61616:61616"
    #  - "61613:61613"



volumes:
  rm-postgresql-vol:
  rm-server-bootstrap-vol:
  rm-server-home-vol:
  rm-server-bootstrap-ja-vol:
  rm-server-ja-log-vol:
  rm-server-ja-data-vol:
  platform-admin-uploaded-vol:
  rts-deployments-vol:
  rts-licenses-vol:
  jupyterhub-postgresql-vol:
  grafana-home:
  keycloak-postgresql-vol:
  keycloak-admin-cli-vol:
  rm-landing-page-vol:
  rm-token-tool-vol:
  deployed-services-vol:
  rm-coding-shared-vol:
      #  name: ${JHUB_ENV_VOLUME_NAME}
  rapidminer_automodel_dbdata:
  rapidminer_automodel_shared:

networks:
  rm-platform-int-net:
  rm-idp-db-net:
  rm-server-db-net:
  rm-coding-environment-storage-net:
  jupyterhub-user-net:
      #  name: jupyterhub-user-net-${JUPYTER_STACK_NAME}
  rm-go-int-net:
  rm-go-proxy-net:
